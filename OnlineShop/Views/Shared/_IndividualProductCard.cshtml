@model OnlineShop.Models.Product

<div class="product-container" style="background-image: url('@Model.Image');">
    <div class="overlay">
        <div class="items"></div>
        <div class="items head">
            <p>@Model.Name</p>
            <hr>
        </div>
        <div class="items description">
            <p>@Model.Description</p>
        </div>
        <div class="items price">
            @if (Model.IsOnSale)
            {
                <p class="old">ILS @Model.Price</p>
                <p class="new">ILS @(Model.Price - (Model.Price * Model.DiscountPercentage / 100))</p>
            }
            else
            {
                <p class="new">ILS @Model.Price</p>
            }
        </div>
        @if (Model.Amount > 0)
        {
            <div class="items quantity">
                <input type="number" id="quantity-@Model.Id" value="1" min="1" max="@Model.Amount">
            </div>
            <div class="items actions">
                <button class="btn btn-add-to-cart" onclick="handleAction(@Model.Id, 'add')"><i class="fa fa-shopping-cart"></i><span>Add to Cart</span></button>
                <button class="btn btn-buy" onclick="handleAction(@Model.Id, 'buy')"><i class="fa fa-bolt"></i><span>Buy Now</span></button>
            </div>
        }
        else
        {
            <div class="items out-of-stock">
                <p>Out of Stock</p>
                @if (User.Identity.IsAuthenticated)
                {
                    <button class="btn btn-notify" onclick="notifyMe(@Model.Id)">Notify Me</button>
                }
                else
                {
                    <button class="btn btn-notify" onclick="alert('Only registered users can use the Notify Me feature. Please log in or register.');">Notify Me</button>
                }
            </div>


            <p class="notify-message-@Model.Id" style="display: none;">You will be notified when the product is available.</p>


        }
    </div>

    <script>
        function notifyMe(productId) {
            $.post('@Url.Action("RequestNotification", "Product")', { productId: productId }, function (response) {
                if (response.success) {
                    alert('You will be notified when the product is available.');
                    $('.notify-message').show();
                } else {
                    alert(response.message);
                }
            });
        }


        function showNotifyInput(button) {
            var notifyInput = button.closest('.items').nextElementSibling;
            notifyInput.style.display = 'block';
        }

        function sendNotification(event, form, productId) {
            event.preventDefault();
            var email = form.querySelector('input[name="email"]').value;

            $.post('@Url.Action("RequestNotification", "Product")', { productId: productId, email: email }, function () {
                form.style.display = 'none';
                form.nextElementSibling.style.display = 'block';
            });
        }


        function handleAction(productId, action) {
            var quantityInput = document.getElementById('quantity-' + productId);
            var quantity = parseInt(quantityInput.value);
            var maxQuantity = parseInt(quantityInput.max);

            if (quantity > maxQuantity) {
                alert('Not enough in stock.');
            } else {
                if (action === 'add') {
                    // Add to cart logic here
                    $.post('@Url.Action("AddToCart", "Cart")', { id: productId, quantity: quantity }, function () {
                        alert('Added ' + quantity + ' item(s) to cart.');
                        location.reload();
                    });
                } else if (action === 'buy') {
                    // Buy now logic here

                    $.post('@Url.Action("AddToCart", "Cart")', { id: productId, quantity: quantity }, function () {
                        // Redirect to the cart or checkout page after adding the item to the cart
                        window.location.href = '@Url.Action("DisplayCart", "Cart")'; // Change this to your cart or checkout URL
                    });
                }
            }
        }
    </script>

</div>
