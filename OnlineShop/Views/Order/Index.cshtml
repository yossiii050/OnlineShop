@model List<OnlineShop.Models.ViewModels.OrderDetailsViewModel>
<style>
    .container {
        max-width: 1200px;
        margin: auto;
    }

    .order-card {
        border: 1px solid #ddd;
        margin-bottom: 20px;
        padding: 15px;
    }

    .order-header {
        display: flex;
        justify-content: space-between;
    }

    .shipping-address {
        background-color: #f0f0f0;
        padding: 10px;
    }

    .btn-cancel {
        background-color: red;
        color: white;
        padding: 10px 20px;
        border: none;
        cursor: pointer;
    }

    .order-details {
        width: 100%;
        border-collapse: collapse;
    }

        .order-details th, .order-details td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

    .order-total {
        text-align: right;
        margin-top: 10px;

        .order-actions select {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 5px;
        margin-bottom: 10px;
        transition: border-color 0.3s ease;
    }

    .order-actions select:focus {
        border-color: #007bff;
    }

    .status-updated {
        animation: pulse 1s;
    }


    }
</style>
<div class="container">
    <h2>My Orders</h2>
    <div class="search-bar">
        <!-- Search bar implementation -->
    </div>

    @if (Model != null)
    {
        foreach (var order in Model)
        {
            <div class="order-card">
                <div class="order-header">
                    <div class="order-info">
                        <p><strong>Order Id:</strong> @order.OrderId</p>
                        <p><strong>User Name:</strong> @order.UserName</p>
                        <p><strong>Confirmation Number:</strong> @order.confirmationNumber</p>
                        <p><strong>Credit Card:</strong>**** **** **** @order.fourCardNumber</p>                        <p><strong>Delivery Date:</strong> @order.OrderDate.ToString("g")</p>
                        <p><strong>Order Status:</strong> @order.Status.ToString()</p>
                    </div>
                    <div class="shipping-address">
                        <p><strong>Shipping Address</strong></p>
                        <p>order.ShippingAddress.FullName</p>
                        <p>@order.ShipStreet</p>
                        <p>@order.ShipCity @order.ShipCountry @order.ShipZipCode</p>
                    </div>
                    <div class="order-actions">
                        <select class="form-control" onchange="updateOrderStatus(@order.OrderId, this.value)">
                            <!option value="Accepted" @(order.Status == OrderStatus.Accepted ? "selected" : "")>Accepted</!option>
                            <!option value="Shipped" @(order.Status == OrderStatus.Shipped ? "selected" : "")>Shipped</!option>
                            <!option value="Completed" @(order.Status == OrderStatus.Completed ? "selected" : "")>Completed</!option>
                            <!option value="Cancelled" @(order.Status == OrderStatus.Cancelled ? "selected" : "")>Cancelled</!option>
                        </select>
                    </div>


                </div>
                <div class="order-details-wrapper">
                    @if (order.Items != null && order.Items.Any())
                    {
                        <table class="order-details">
                            <thead>
                                <tr>
                                    <th>Product ID</th>
                                    <th>Product Name</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Sub Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in order.Items)
                                {
                                    <tr>
                                        <td>@item.ProductId</td>
                                        <td>@item.Name</td>
                                        <td>@item.Price.ToString("C")</td>
                                        <td>@item.Quantity</td>
                                        <td>@(item.Price * item.Quantity)</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <div class="order-total">
                            <p><strong>Sub Total:</strong> @order.TotalPrice.ToString("C")</p>
                            <p><strong>Discount:</strong> @order.DiscountHas %</p>
                            <p><strong>Shipping Charge:</strong>₪ 25</p>
                            <p><strong>Total:</strong> @order.FinalPrice.ToString("C")</p>
                        </div>
                    }
                    else
                    {
                        <p>No items found for this order.</p>
                    }
                </div>  
            </div>
        }
    }
</div>

@section Scripts {
    <script>
        function updateOrderStatus(orderId, newStatus) {
    var selectElement = $('[onchange="updateOrderStatus(' + orderId + ', this.value)"]');
    $.ajax({
        url: '@Url.Action("UpdateOrderStatus", "order")',
        type: 'POST',
        data: { orderId: orderId, newStatus: newStatus },
        success: function (response) {
            if (response.success) {
                selectElement.addClass('status-updated');
                setTimeout(function () {
                    selectElement.removeClass('status-updated');
                }, 1000);
                alert('Order status updated successfully!');
                        location.reload();
            } else {
                alert('Failed to update order status.');
            }
        },
        error: function () {
            alert('Error updating order status.');
        }
    });
}

    </script>
}