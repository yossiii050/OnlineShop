@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<style>


.chatbot-container {
    width: 500px;
    margin: 0 auto;
    background-color: #f5f5f5;
    border: 1px solid #cccccc;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

#chatbot {
    background-color: #f5f5f5;
    border: 1px solid #eef1f5;
    box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.1);
    border-radius: 4px;
  }
  
  #header {
    background-color: darkslategrey;
    color: #ffffff;
    padding: 20px;
    font-size: 1em;
    font-weight: bold;
  }

  message-container {
    background: #ffffff;
    width: 100%;
    display: flex;
    align-items: center;
  }
  
  
  #conversation {
    height: 500px;
    overflow-y: auto;
    padding: 20px;
    display: flex;
    flex-direction: column;
  }

  
  .chatbot-message {
    display: flex;
    align-items: flex-start;
    position: relative;
    font-size: 16px;
    line-height: 20px;
    border-radius: 20px;
    word-wrap: break-word;
    white-space: pre-wrap;
    max-width: 100%;
    padding: 0 15px;
  }

  .user-message {
    justify-content: flex-end;
  }


.chatbot-text {
    background-color: white;
    color: #333333;
    font-size: 1.1em;
    padding: 15px;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  #input-form {
    display: flex;
    align-items: center;
    border-top: 1px solid #eef1f5;
  }
  
  #input-field {
    flex: 1;
    height: 60px;
    border: 1px solid #eef1f5;
    border-radius: 4px;
    padding: 0 10px;
    font-size: 14px;
    transition: border-color 0.3s;
    background: #ffffff;
    color: #333333;
    border: none;
  }

  .send-icon {
    margin-right: 10px;
    cursor: pointer;
  }
  
  #input-field:focus {
    border-color: #333333;
    outline: none;
  }
  
  #submit-button {
    background-color: transparent;
    border: none;
  }

  p[sentTime]:hover::after {    
    content: attr(sentTime);
    position: absolute;
    top: -3px;
    font-size: 14px;
    color: gray;
  }

  .chatbot p[sentTime]:hover::after {  
    left: 15px;
  }

  .user-message p[sentTime]:hover::after {  
    right: 15px;
  }

::-webkit-scrollbar {
    width: 10px;
  }
  
  ::-webkit-scrollbar-track {
    background: #f1f1f1; 
  }
   
  ::-webkit-scrollbar-thumb {
    background: #888; 
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: #555; 
  }

</style>
<head>
    <title>Chatbot</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>
<div class="chatbot-container">
        <div id="header">
            <h1>Chatbot</h1>
        </div>
        <div id="chatbot">
            <div id="conversation">
              <div class="chatbot-message">
                <p class="chatbot-text">Hi! 👋 it's great to see you!</p>
              </div>
            </div>
        <form id="input-form">
            <div class="message-container">
                <input id="input-field" type="text" placeholder="Type your message here">
                <button id="submit" type="submit">
                </button>
            </div>
        </form>
        </div>  

    </div>
   
    <script>
        $(document).ready(function () {
            $("#input-form").submit(function (event) {
                event.preventDefault(); 

                var question = $("#input-field").val(); 
                if (!question.trim()) return; 

                var currentTime = new Date().toLocaleTimeString([], { hour: '2-digit', minute: "2-digit" });

            
                var userMessage = document.createElement('div');
                userMessage.classList.add('chatbot-message', 'user-message');
                userMessage.innerHTML = `<p class="chatbot-text" sentTime="${currentTime}">${question}</p>`;
                document.getElementById("conversation").appendChild(userMessage);
                userMessage.scrollIntoView({ behavior: "smooth" });

                
                $("#input-field").val('');

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetResponse", "Chatbot")',
                    data: { userQuestion: question },
                    success: function (response) {
                        var chatbotMessage = document.createElement('div');
                        chatbotMessage.classList.add('chatbot-message');
                        chatbotMessage.innerHTML = `<p class="chatbot-text" sentTime="${currentTime}">${response.botAnswer}</p>`;
                        document.getElementById("conversation").appendChild(chatbotMessage);
                        chatbotMessage.scrollIntoView({ behavior: "smooth" });
                    },
                    error: function () {
                        alert("Error getting response from chatbot");
                    }
                });
            });
        });



    </script>
</body>